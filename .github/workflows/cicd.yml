name: cicd pipeline

on:
  push:
    branches: [ "master" ]

jobs:
  compile:
    runs-on: self-hosted

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn compile

  run-security-check:
    runs-on: self-hosted
    needs: compile

    steps:
    - uses: actions/checkout@v4
    
    - name: Clean up existing Trivy key and repository
      run: |
        # Remove any existing Trivy key files to avoid conflicts
        sudo rm -f /etc/apt/trusted.gpg.d/trivy.gpg
        sudo rm -f /etc/apt/keyrings/trivy.gpg
        sudo rm -f /etc/apt/sources.list.d/trivy.list

    - name: Trivy installation (Ubuntu 24.04 fix)
      run: |
        # Install dependencies
        sudo apt-get update -y
        sudo apt-get install -y wget gnupg lsb-release

        # Create keyrings directory if it doesn't exist
        sudo mkdir -p /etc/apt/keyrings

        # Fetch and add Trivy GPG key to the keyring
        wget -qO- https://aquasecurity.github.io/trivy-repo/deb/public.key | \
          sudo gpg --dearmor -o /etc/apt/keyrings/trivy.gpg

        # Add Trivy repository with signed-by option
        echo "deb [signed-by=/etc/apt/keyrings/trivy.gpg] https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -sc) main" | \
          sudo tee /etc/apt/sources.list.d/trivy.list

        # Update apt and install Trivy
        sudo apt-get update -y
        sudo apt-get install -y trivy

    - name: Verify Trivy installation
      run: trivy --version

    - name: Trivy FS scan
      run: trivy fs --format json -o fs-report.json .

    - name: Gitleaks installation
      run: |
        # Install Gitleaks from GitHub release
        wget https://github.com/gitleaks/gitleaks/releases/download/v8.18.4/gitleaks_8.18.4_linux_x64.tar.gz
        tar -xzf gitleaks_8.18.4_linux_x64.tar.gz
        sudo mv gitleaks /usr/local/bin/
        gitleaks version

    - name: Gitleaks code scan
      run: gitleaks detect --source . --report-path=gitleaks-report.json --report-format=json

    - name: Upload security scan reports
      uses: actions/upload-artifact@v4
      with:
        name: security-reports
        path: |
          fs-report.json
          gitleaks-report.json
